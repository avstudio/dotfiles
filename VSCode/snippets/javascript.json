{
  "koa.all": {
    "prefix": "koa.all",
    "body": [
      "router.all(${1:'*'}, ${2:requireAuthentication}, ${3:loadUser});"
    ],
    "description": "This method is like the standard router.METHOD() methods, except it matches all HTTP verbs."
  },
  "koa.get": {
    "prefix": "koa.get",
    "body": [
      "router.get('$1', ${2:(ctx,next)} => {\n\t${3}\n});"
    ],
    "description": "Routes HTTP GET request to the specifed path with the specified callback functions."
  },
  "koa.listen": {
    "prefix": "koa.listen",
    "body": [
      "router.listen(${1:3000}, ($2) => {\n\t${3:console.log('App listening on port 3000!')};\n});"
    ],
    "description": "Binds and listens for connections on the specified host and port. This method is identical to Node's http.Server.listen()."
  },
  "koa.param": {
    "prefix": "koa.param",
    "body": [
      "router.param('${1}', (${2:ctx,next, id}) => {\n\t$3\n});"
    ],
    "description": "Add callback triggers to route parameters, where name is the name of the parameter or an array of them, and callback is the callback function. The parameters of the callback function are the request object, the response object, the next middleware, the value of the parameter and the name of the parameter, in that order."
  },
  "koa.patch": {
    "prefix": "koa.patch",
    "body": [
      "router.patch('$1', ${2:(ctx,next)} => {\n\t${3}\n});"
    ],
    "description": "Routes HTTP PATCH request to the specifed path with the specified callback functions."
  },
  "koa.post": {
    "prefix": "koa.post",
    "body": [
      "router.post('$1', ${2:(ctx,next)} => {\n\t${3}\n});"
    ],
    "description": "Routes HTTP POST requests to the specified path with the specified callback functions."
  },
  "koa.path": {
    "prefix": "koa.path",
    "body": [
      "router.path();"
    ],
    "description": "Returns the canonical path of the app, a string."
  },
  "koa.put": {
    "prefix": "koa.put",
    "body": [
      "router.put('$1', ${2:(ctx,next)} => {\n\t${3}\n});"
    ],
    "description": "Routes HTTP PUT requests to the specified path with the specified callback functions."
  },
  "koa.delete": {
    "prefix": "koa.delete",
    "body": [
      "router.delete('$1', ${2:(ctx,next)} => {\n\t${3}\n});"
    ],
    "description": "Routes HTTP DELETE requests to the specified path with the specified callback functions."
  },
  "koa.render": {
    "prefix": "koa.render",
    "body": [
      "router.render('${1}', (${2:err}) => {\n\t$3\n});"
    ],
    "description": "Returns the rendered HTML of a view via the callback function. It accepts an optional parameter that is an object containing local variables for the view."
  },
  "koa.route": {
    "prefix": "koa.route",
    "body": [
      "router.route('${1:/}')"
    ],
    "description": "Returns an instance of a single route, which you can then use to handle HTTP verbs with optional middleware. Use koa.route() to avoid duplicate route names (and thus typo errors)."
  },
  "koa.set": {
    "prefix": "router.set",
    "body": [
      "koa.set('${1:name}', '${2:value}');"
    ],
    "description": "Assigns setting name to value, where name is one of the properties from the app settings table."
  },
  "koa.use": {
    "prefix": "router.use",
    "body": [
      "koa.use('${1:/path}', (${2:ctx,next}) => {\n\t$3\n});"
    ],
    "description": "Mounts the specified middleware function or functions at the specified path. If path is not specified, it defaults to “/”."
  },
  "empty.func": {
    "prefix": "empf",
    "body": "() => {$1}"
  },
  "empty.asyncfunc": {
    "prefix": "aempf",
    "body": "async () => {$1}"
  },
  "empty.obj.func": {
    "prefix": "empof",
    "body": "() => ({$1})"
  },
  "export default {}": {
    "prefix": "edfo",
    "body": "export default {$1}"
  },
  "vdata": {
    "prefix": "vdata",
    "body": "data:()=>({$1}),"
  }
}
